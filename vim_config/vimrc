" Vundle configfile source. Add the bundles to ~/.vundle and not here
" Do not add any config BEFORE this line
source ~/.vundle

"
" BASIC CONFIG
"

syn on
set bg=dark
set is ic hls scs aw ru si ai
set sw=4 sts=4 ts=4 et
set wildmenu wim=longest,list
set cursorline relativenumber
set nocompatible modelines=0
set showmode showcmd ttyfast
set laststatus=2
set scrolloff=3
set undofile

colorscheme molokai

" Reload config file
map <F1> :source ~/.vimrc<CR>

" Color fix
let &t_Co=256

"
" REMAPS
" 

cab W w
cab Wq wq

" Fix j/k
nnoremap j gj
nnoremap k gk

" Easily return to normal mode using jj
inoremap jj <ESC>

" Easily clean search hilighting with \<space>
nnoremap <leader><space> :noh<cr>

" Easily clean search hilighting with \<space>
nnoremap <leader>n :set relativenumber!<cr>

" Easily set paste!
nnoremap <leader>p :set paste!<cr>

" Remove trailing whitespace with \q
nnoremap <leader>q :%s/\s\+$//<cr>:let @/=''<CR>

" Easy switch wrap/nowrap
nnoremap <leader>w :set wrap!<CR>

" Toggle visible whitespace
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,eol:¬

" Open VSplit with vimrc
nnoremap <leader>ev <C-w><C-v><C-l>:e $MYVIMRC<cr>

" Open VSplit e move to it
nnoremap <leader>w <C-w>v<C-w>l

" Remaps to easily switch to other split:
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"
" BUNDLES CONFIG
"

" NERDTree Toggle
map <F10> :NERDTreeToggle<CR>

" NERDTree auto close
au bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Gundo Toggle
nnoremap <leader>u :GundoToggle<CR>

" Gundo Settings
let g:gundo_right = 1
let g:gundo_close_on_revert = 1
let g:gundo_preview_bottom = 1

" Taglist plugin mapping
nmap <leader>t :TagbarToggle<CR>

" Taglist config
"let g:tagbar_autofocus = 1
"let g:tagbar_autoclose = 1
let g:tagbar_compact = 1
let g:tagbar_autoshowtag = 1

" Powerline Fancy Settings
let g:Powerline_symbols = 'fancy'

" ACP Ignore List
let g:acp_behaviorKeywordIgnores = ["if", "for", "print", "echo", "def", "case", "self", "class", "return", "len", "continue", "break"]
let g:acp_enableAtStartup = 0

" 
" VIM ADVANCED CONFIGS
"

" Omnicomplete
set ofu=syntaxcomplete#Complete
autocmd FileType python     set omnifunc=pythoncomplete#Complete

" Return cursor to where left
au BufWinLeave ?* mkview
au BufWinEnter ?* silent loadview

" Save when losing focus
au FocusLost ?* :wa

" Custom file syntax
au BufWritePre,BufRead .vundle setfiletype vim

" Puppet highlighting
au BufRead,BufNewFile *.pp set filetype=puppet

" IDE style 'run' commands
" Bash
au BufNewFile,BufRead *.sh map <F11> :w<CR>:!clear && bash "%"<CR>
au BufNewFile,BufRead *.sh map <F12> :w<CR>:!clear && bash -x "%"<CR>

" Python
au BufNewFile,BufRead *.py map <F11> :w<CR>:!clear && python "%"<CR>

"
" MACVIM CONFIG
" 

if has("gui_running")
	colorscheme molokai
	set guioptions-=r
	set guioptions-=L
	set guifont=Menlo:h12

	" IDE style 'run' commands
    " Bash
    au BufNewFile,BufRead *.sh map <F11> :w<CR>:!bash "%"<CR>
    au BufNewFile,BufRead *.sh map <F12> :w<CR>:!bash -x "%"<CR>

    " Python
    au BufNewFile,BufRead *.py map <F11> :w<CR>:!python "%"<CR>
endif
